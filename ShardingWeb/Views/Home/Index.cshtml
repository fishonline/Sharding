
@{
    ViewBag.Title = "Index";
}

<h2>大数据量模拟</h2>

<p>
    思路：建立一张日志表，然后插入大量数据，有一个列表来展示数据。
    <br />
    通过下面的两个按钮【数据库管理】和【查看数据】来初始化数据和查看数据量情况。直至加载明显变慢。
    <br />
    大概步骤如下：
    <ol>
        <li>点击【数据库管理】按钮</li>
        <li>点击【初始化数据库】按钮</li>
        <li>点击【初始化数据(异步，显示进度)】按钮</li>
    </ol>
</p>

<div class="well">
    @Html.ActionLink("数据库管理", "DB", "Home", new { @class = "al" })
    @Html.ActionLink("查看数据", "Log", "Home", new { @class = "al" })
    @Html.ActionLink("查看数据withIndex", "LogWithIndex", "Home", new { @class = "al" })
    @Html.ActionLink("查看数据withSomeField", "LogWithSomeField", "Home", new { @class = "al" })
</div>

<h4>情况分析</h4>
<p>
    我模拟的情况是
    <div class="well">
        记录条数：42,070,000 总页数： 4,207,000
    </div>
    <div class="well">
        第一页加载用时： 12-13秒左右
    </div>  
</p>

<h4>解决分析</h4>

<p>
    首先查看执行的SQL语句：
    <code>
        @Html.Encode(@"select * from (select *,(@rowNum:=@rowNum+1) as Number from (
    SELECT
    *
    FROM log
    where 1 = 1 order by date desc  limit 42069990, 10
    )t,(Select (@rowNum :=0) ) b) tt")
    </code>

    首先考虑建立索引
    <code>
        CREATE INDEX `idx_log_date`  ON `shardingdb`.`log` (date desc) COMMENT '' ALGORITHM DEFAULT LOCK DEFAULT
    </code>
    <br />
    建立索引后，没有什么效果，仍然需要遍历很多条记录。分析一下这条查询，按日期倒序排列，然后分页，如果我们取第9000页的数据，除了上面的方法外，
    我们还可以先取到第9000页第一条数据的日期，然后通过日期先去掉第9000页之前的数据。我们要找的就是日期小于等于第9000页第一条数据的日期，且拿前10条
    然后修改分页语句，如下：
    <code>
        @Html.Raw(@"select * from (select *,(@rowNum:=@rowNum+1) as Number from (
        select * from log where 1=1 and date <= (select date from log where 1=1 order by date desc limit 999991,1) order by date desc limit 0,10
        )t,(Select (@rowNum :=0) ) b) tt;")
    </code>
    <br />
    网上说使用partion分区有效果，可是分了半天，不管作用。
</p>